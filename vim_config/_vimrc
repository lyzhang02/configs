"vim configuration file on Windows.
"Place this _vimrc in user's home directory.
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'luochen1990/rainbow' "括号彩色配对
Plugin 'Raimondi/delimitMate' "括号自动补全
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'mbbill/undotree'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter' "快速注释
Plugin 'Yggdroot/indentLine'    "缩进提示
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'nightsense/seabird'
Plugin 'sickill/vim-monokai'
Plugin 'ctrlpvim/ctrlp.vim'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

syntax on "语法高亮
syntax enable
let mapleader = ',' "修改leader键
set number  "显示行号
set cindent
set cino=g0 "缩进设置 class 内部的private,protect,public,缩进0
"set autoindent
"set smartindent
set backspace=indent,eol,start
set expandtab   "加入的缩进用空格代替
set tabstop=4   "读取的缩进用4空格代替
set softtabstop=4   "退格时4个空格当作一个缩进删除
set shiftwidth=4    "缩进宽度4空格
set incsearch
set hlsearch "高亮查找结果
"set guifont=Ubuntu\ Mono:h13
set guifont=DejaVu\ Sans\ Mono:h13
set showtabline=1
set textwidth=100
set colorcolumn=+1
set fileformat=dos
set t_Co=256
"set background=light
if has('gui_running')
    colorscheme seagull
else
    colorscheme monokai
endif

set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1
"set termencoding=utf-8
set encoding=utf-8
set langmenu=zh_CN.UTF-8
language message zh_CN.UTF-8
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim
set fileencoding=utf-8

"colorscheme xcode
hi ColorColumn ctermbg=red
hi ColorColumn guibg=red

nnoremap <leader>te :tabnew<CR>
nnoremap <leader>tn :tabn<CR>
nnoremap <leader>tp :tabp<CR>
nnoremap <leader>tc :tabc<CR>
nnoremap <leader>bf :buffers<CR>"正则 () []
inoremap <C-H> <BS>

"彩色括号配对配置
let g:rainbow_active=1
let g:rainbow_conf = {
    \   'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick'],
    \   'ctermfgs': ['lightblue', 'lightyellow', 'lightcyan', 'lightmagenta'],
    \   'operators': '_,_',
    \   'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold'],
    \   'separately': {
    \       '*': {},
    \       'tex': {
    \           'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/'],
    \       },
    \       'lisp': {
    \           'guifgs': ['royalblue3', 'darkorange3', 'seagreen3', 'firebrick', 'darkorchid3'],
    \       },
    \       'vim': {
    \           'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimFuncBody', 'start=/\[/ end=/\]/ containedin=vimFuncBody', 'start=/{/ end=/}/ fold containedin=vimFuncBody'],
    \       },
    \       'html': {
    \           'parentheses': ['start=/\v\<((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ >])@!\z([-_:a-zA-Z0-9]+)(\s+[-_:a-zA-Z0-9]+(\=("[^"]*"|'."'".'[^'."'".']*'."'".'|[^ '."'".'"><=`]*))?)*\>/ end=#</\z1># fold'],
    \       },
    \       'css': 0,
    \   }
    \}

"vim-airline
"let g:airline#extensions#tabline#enabled = 1
let g:airline_theme ='luna'
set laststatus=2

"indentLine
let g:indentLine_setColors = 0
let g:indentLine_enabled = 1
let g:indentLine_fileType = []
let g:indentLine_fileTypeExclude = []

"undotree
nnoremap <leader>ud :UndotreeToggle<CR>
let g:undotree_WindowLayout = 2

"NERDtree
nnoremap <leader>nt :NERDTree<CR>
let NERDTreeWinPos='right'

"delimitMate
let delimitMate_autoclose = 0
au FileType cpp,python let b:delimitMate_autoclose = 1

"vim-better-whitespace
nnoremap <leader>s :StripWhitespace<CR>

"CtrlP
let g:ctrlp_map = '<C-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'wa' "未指定查找开始目录时的起始模式
let g:ctrlp_switch_buffer='Et' "当打开一个已经打开的文件时跳转过去而不是重新打开一个窗口
let g:ctrlp_tabpage_position = 'ac' "在当前标签的后面打开新标签项

